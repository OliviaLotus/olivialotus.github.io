<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vue on Lotus</title><link>https://example.org/tags/vue/</link><description>Recent content from Lotus</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>xxx@example.com (OliviaLotus)</managingEditor><webMaster>xxx@example.com (OliviaLotus)</webMaster><copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright><lastBuildDate>Sat, 19 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://example.org/tags/vue/index.xml" rel="self" type="application/rss+xml"/><item><title>Vant自动引入样式的坑</title><link>https://example.org/post/25-04-19-vant%E8%87%AA%E5%8A%A8%E5%BC%95%E5%85%A5%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%9D%91/vant%E8%87%AA%E5%8A%A8%E5%BC%95%E5%85%A5%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%9D%91/</link><pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/25-04-19-vant%E8%87%AA%E5%8A%A8%E5%BC%95%E5%85%A5%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%9D%91/vant%E8%87%AA%E5%8A%A8%E5%BC%95%E5%85%A5%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%9D%91/</guid><description>
<![CDATA[<h1>Vant自动引入样式的坑</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h3 id="前言">
<a class="header-anchor" href="#%e5%89%8d%e8%a8%80"></a>
前言
</h3><p>“按照官方文档配置了
<code>unplugin-vue-components</code> + <code>@vant/auto-import-resolver</code>，组件都能正常渲染，可一调用 <code>showFailToast('失败')</code>，弹出来的 Toast 只有文字，没有样式”</p>
        
        <hr><p>本文2025-04-19首发于<a href='https://example.org/'>Lotus</a>，最后修改于2025-04-19</p>]]></description><category>javascript</category></item><item><title>vue3 常用的几种组件通讯方式</title><link>https://example.org/post/24-10-03-vue3-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF%E6%96%B9%E5%BC%8F/</link><pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/24-10-03-vue3-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF%E6%96%B9%E5%BC%8F/</guid><description>
<![CDATA[<h1>vue3 常用的几种组件通讯方式</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h2 id="一父子组件通信">
<a class="header-anchor" href="#%e4%b8%80%e7%88%b6%e5%ad%90%e7%bb%84%e4%bb%b6%e9%80%9a%e4%bf%a1"></a>
一、父子组件通信
</h2><h3 id="1-props-向下传递">
<a class="header-anchor" href="#1-props-%e5%90%91%e4%b8%8b%e4%bc%a0%e9%80%92"></a>
1. Props 向下传递
</h3><p>这是 Vue 中最基础的父子组件通信方式。父组件通过 <code>props</code> 将数据传递给子组件。</p>
<p><strong>父组件：</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-vue" data-lang="vue"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">ChildComponent</span> <span class="nt">:message</span><span class="o">=</span><span class="s">&#34;parentMessage&#34;</span> <span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">setup</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">ref</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="nx">ChildComponent</span> <span class="nx">from</span> <span class="s1">&#39;./ChildComponent.vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">parentMessage</span> <span class="o">=</span> <span class="nx">ref</span><span class="p">(</span><span class="s1">&#39;Hello from Parent&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></div><p><strong>子组件：</strong></p>
        
        <hr><p>本文2024-10-03首发于<a href='https://example.org/'>Lotus</a>，最后修改于2024-10-03</p>]]></description><category>javascript</category></item><item><title>新建vue项目的最佳实践</title><link>https://example.org/post/24-08-25-%E6%96%B0%E5%BB%BAvue%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/24-08-25-%E6%96%B0%E5%BB%BAvue%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>
<![CDATA[<h1>新建vue项目的最佳实践</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h2 id="vite-初始化">
<a class="header-anchor" href="#vite-%e5%88%9d%e5%a7%8b%e5%8c%96"></a>
Vite 初始化
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pnpm create vite
</span></span></code></pre></div><table>
  <thead>
      <tr>
          <th>选项</th>
          <th>内容</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>Project name:</td>
          <td>vite-project(自定义)</td>
      </tr>
      <tr>
          <td>Select a framework:</td>
          <td>Vue</td>
      </tr>
      <tr>
          <td>Select a variant:</td>
          <td>Official Vue Starter</td>
      </tr>
      <tr>
          <td>请选择要包含的功能：</td>
          <td>TypeScript, Router（单页面应用开发）, Pinia（状态管理）, Vitest（单元测试）, ESLint（错误预防）, Prettier（代码格式化）</td>
      </tr>
      <tr>
          <td>选择要包含的试验特性：</td>
          <td>none</td>
      </tr>
  </tbody>
</table>
<p>之后执行：</p>
        
        <hr><p>本文2024-08-25首发于<a href='https://example.org/'>Lotus</a>，最后修改于2024-08-25</p>]]></description><category>javascript</category></item><item><title>Pure-Admin-http工具类解析</title><link>https://example.org/post/24-08-19-pure-admin-http%E5%B7%A5%E5%85%B7%E7%B1%BB%E8%A7%A3%E6%9E%90/</link><pubDate>Mon, 19 Aug 2024 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/24-08-19-pure-admin-http%E5%B7%A5%E5%85%B7%E7%B1%BB%E8%A7%A3%E6%9E%90/</guid><description>
<![CDATA[<h1>Pure-Admin-http工具类解析</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h2 id="typesdts类型定义">
<a class="header-anchor" href="#typesdts%e7%b1%bb%e5%9e%8b%e5%ae%9a%e4%b9%89"></a>
types.d.ts类型定义
</h2><h3 id="1-引入类型">
<a class="header-anchor" href="#1-%e5%bc%95%e5%85%a5%e7%b1%bb%e5%9e%8b"></a>
1. 引入类型
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kr">import</span> <span class="kr">type</span> <span class="p">{</span> <span class="nx">Method</span><span class="p">,</span> <span class="nx">AxiosError</span><span class="p">,</span> <span class="nx">AxiosResponse</span><span class="p">,</span> <span class="nx">AxiosRequestConfig</span> <span class="p">}</span> <span class="kr">from</span> <span class="s2">&#34;axios&#34;</span><span class="p">;</span>
</span></span></code></pre></div><p>从 <code>axios</code> 里引入了一些类型，后面会用到。比如：</p>
<ul>
<li><code>Method</code>：HTTP 方法（get、post、put&hellip;）</li>
<li><code>AxiosError</code>：请求错误类型</li>
<li><code>AxiosResponse</code>：响应类型</li>
<li><code>AxiosRequestConfig</code>：请求配置类型</li>
</ul>
<hr>
<h3 id="2-定义响应数据结构">
<a class="header-anchor" href="#2-%e5%ae%9a%e4%b9%89%e5%93%8d%e5%ba%94%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"></a>
2. 定义响应数据结构
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kr">export</span> <span class="kr">type</span> <span class="nx">resultType</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">accessToken?</span>: <span class="kt">string</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>这只是一个示例类型，表示接口返回的数据结构里可能有一个 <code>accessToken</code> 字段，实际项目里你可以换成你自己的。(删了也行)</p>
        
        <hr><p>本文2024-08-19首发于<a href='https://example.org/'>Lotus</a>，最后修改于2024-08-19</p>]]></description><category>javascript</category></item></channel></rss>