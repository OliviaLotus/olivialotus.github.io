<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ruoyi on Lotus</title><link>https://example.org/tags/ruoyi/</link><description>Recent content from Lotus</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>xxx@example.com (OliviaLotus)</managingEditor><webMaster>xxx@example.com (OliviaLotus)</webMaster><copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright><lastBuildDate>Wed, 05 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://example.org/tags/ruoyi/index.xml" rel="self" type="application/rss+xml"/><item><title>RuoYi-Vue-Plus中数据脱敏功能</title><link>https://example.org/post/24-06-05-ruoyi-vue-plus%E4%B8%AD%E6%95%B0%E6%8D%AE%E8%84%B1%E6%95%8F%E5%8A%9F%E8%83%BD/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/24-06-05-ruoyi-vue-plus%E4%B8%AD%E6%95%B0%E6%8D%AE%E8%84%B1%E6%95%8F%E5%8A%9F%E8%83%BD/</guid><description>
<![CDATA[<h1>RuoYi-Vue-Plus中数据脱敏功能</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h3 id="1-注解标注">
<a class="header-anchor" href="#1-%e6%b3%a8%e8%a7%a3%e6%a0%87%e6%b3%a8"></a>
1. 注解标注
</h3><ul>
<li>
<p><strong>实体类字段标注</strong>：在实体类的字段上添加 <code>@Sensitive</code> 注解，指定脱敏策略和角色权限。例如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">User</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Sensitive</span><span class="p">(</span><span class="n">strategy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">SensitiveStrategy</span><span class="p">.</span><span class="na">PHONE</span><span class="p">,</span><span class="w"> </span><span class="n">perms</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;system:user:edit&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">phonenumber</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>这里，<code>phonenumber</code> 字段被标注为使用 <code>PHONE</code> 脱敏策略，并且只有具有 <code>system:user:edit</code> 权限的用户才能看到脱敏后的手机号。</p>
        
        <hr><p>本文2024-06-05首发于<a href='https://example.org/'>Lotus</a>，最后修改于2024-06-05</p>]]></description><category>java</category></item><item><title>RuoYi-Vue-Plus数据过滤功能</title><link>https://example.org/post/24-06-05-ruoyi-vue-plus%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4%E5%8A%9F%E8%83%BD/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/24-06-05-ruoyi-vue-plus%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4%E5%8A%9F%E8%83%BD/</guid><description>
<![CDATA[<h1>RuoYi-Vue-Plus数据过滤功能</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h2 id="一代码不完整需结合完整源码">
<a class="header-anchor" href="#%e4%b8%80%e4%bb%a3%e7%a0%81%e4%b8%8d%e5%ae%8c%e6%95%b4%e9%9c%80%e7%bb%93%e5%90%88%e5%ae%8c%e6%95%b4%e6%ba%90%e7%a0%81"></a>
一、代码不完整,需结合完整源码
</h2><h2 id="二核心组件职责说明">
<a class="header-anchor" href="#%e4%ba%8c%e6%a0%b8%e5%bf%83%e7%bb%84%e4%bb%b6%e8%81%8c%e8%b4%a3%e8%af%b4%e6%98%8e"></a>
二、核心组件职责说明
</h2><table>
  <thead>
      <tr>
          <th>组件</th>
          <th>类名</th>
          <th>核心职责</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>切面</strong></td>
          <td>DataPermissionAspect</td>
          <td>前置上下文准备和后置资源清理</td>
      </tr>
      <tr>
          <td><strong>拦截器</strong></td>
          <td>PlusDataPermissionInterceptor</td>
          <td>拦截SQL执行，协调权限处理流程</td>
      </tr>
      <tr>
          <td><strong>处理器</strong></td>
          <td>PlusDataPermissionHandler</td>
          <td>解析注解，生成权限过滤条件</td>
      </tr>
      <tr>
          <td><strong>上下文</strong></td>
          <td>DataPermissionHelper</td>
          <td>管理线程级权限上下文</td>
      </tr>
      <tr>
          <td><strong>解析器</strong></td>
          <td>JSqlParser</td>
          <td>解析和修改SQL语句</td>
      </tr>
      <tr>
          <td><strong>枚举</strong></td>
          <td>DataScopeType</td>
          <td>定义不同数据范围的处理规则</td>
      </tr>
  </tbody>
</table>
<h2 id="三详细执行流程分析">
<a class="header-anchor" href="#%e4%b8%89%e8%af%a6%e7%bb%86%e6%89%a7%e8%a1%8c%e6%b5%81%e7%a8%8b%e5%88%86%e6%9e%90"></a>
三、详细执行流程分析
</h2><h3 id="阶段0切面设置权限上下文前置处理">
<a class="header-anchor" href="#%e9%98%b6%e6%ae%b50%e5%88%87%e9%9d%a2%e8%ae%be%e7%bd%ae%e6%9d%83%e9%99%90%e4%b8%8a%e4%b8%8b%e6%96%87%e5%89%8d%e7%bd%ae%e5%a4%84%e7%90%86"></a>
阶段0：切面设置权限上下文（前置处理）
</h3><p><strong>执行点</strong>：<code>DataPermissionAspect.doBefore()</code></p>
        
        <hr><p>本文2024-06-05首发于<a href='https://example.org/'>Lotus</a>，最后修改于2024-06-05</p>]]></description><category>java</category></item><item><title>RuoYi-Vue-Plus 的事件与日志记录机制详解</title><link>https://example.org/post/24-06-05-ruoyi-vue-plus%E7%9A%84%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E6%9C%BA%E5%88%B6/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><author>xxx@example.com (OliviaLotus)</author><guid>https://example.org/post/24-06-05-ruoyi-vue-plus%E7%9A%84%E4%BA%8B%E4%BB%B6%E4%B8%8E%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E6%9C%BA%E5%88%B6/</guid><description>
<![CDATA[<h1>RuoYi-Vue-Plus 的事件与日志记录机制详解</h1><p>作者：OliviaLotus（xxx@example.com）</p>
        
          <h2 id="一事件机制简介">
<a class="header-anchor" href="#%e4%b8%80%e4%ba%8b%e4%bb%b6%e6%9c%ba%e5%88%b6%e7%ae%80%e4%bb%8b"></a>
一、事件机制简介
</h2><p>事件机制是 Spring 框架中的一种设计模式，它允许应用程序在运行时动态地发布和订阅事件。这种机制的核心思想是将事件的发布者（Publisher）和事件的订阅者（Subscriber）解耦，使得两者之间不需要直接的依赖关系。在 RuoYi-Vue-Plus 中，事件机制被用于记录登录信息、操作日志等场景。</p>
        
        <hr><p>本文2024-06-05首发于<a href='https://example.org/'>Lotus</a>，最后修改于2024-06-05</p>]]></description><category>java</category></item></channel></rss>